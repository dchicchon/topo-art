{"version":3,"sources":["Nav/index.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","nav","useRef","toggleNavRef","docs","options","landColorRef","lineColorRef","lineWidthRef","handleColorChange","color","property","setLineColor","hex","setLandColor","ref","id","onClick","e","current","style","maxHeight","display","setContours","prevState","setPlaces","img","map","getCanvas","toDataURL","console","log","download","document","createElement","href","target","evt","createEvent","initMouseEvent","window","dispatchEvent","textContent","left","innerWidth","className","lineColor","onChangeComplete","landColor","onChange","setLineWidth","parseFloat","value","lineWidth","type","min","max","step","mapboxgl","accessToken","App","mapContainer","useState","setMap","contours","places","useEffect","lng","lat","zoom","longitude","localStorage","getItem","latitude","zoomStore","newMap","Map","container","center","preserveDrawingBuffer","on","addSource","url","addLayer","source","layout","paint","setItem","getCenter","toFixed","getZoom","setPaintProperty","newVisibleProperty","setLayoutProperty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4af88e9.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport { SketchPicker } from 'react-color'\nimport './style.css'\n\nconst Nav = (props) => {\n    const nav = useRef(null)\n    const toggleNavRef = useRef(null)\n    const docs = useRef(null)\n    const options = useRef(null)\n    const landColorRef = useRef(null)\n    const lineColorRef = useRef(null)\n    const lineWidthRef = useRef(null)\n\n    const toggleNav = (e) => {\n        if (toggleNavRef.current.textContent === '<') {\n            // anytime we hide the nav, be sure to hide everything\n\n            nav.current.style.left = window.innerWidth < 600 ? '-10rem' : '-15rem'\n            lineColorRef.current.style.display = 'none'\n            toggleNavRef.current.textContent = '>'\n        } else {\n            nav.current.style.left = '0px'\n            toggleNavRef.current.textContent = '<'\n            // hide everything\n\n        }\n    }\n\n    const toggleDocs = (e) => {\n        if (docs.current.style.maxHeight === '0px' || !docs.current.style.maxHeight) {\n            docs.current.style.maxHeight = '500px'\n        } else {\n            docs.current.style.maxHeight = '0px'\n        }\n    }\n    const toggleOptions = (e) => {\n        if (options.current.style.maxHeight === '0px' || !options.current.style.maxHeight) {\n            options.current.style.maxHeight = '500px'\n        } else {\n            options.current.style.maxHeight = '0px'\n        }\n    }\n    const toggleLineColor = (e) => {\n        if (lineColorRef.current.style.display === 'none' || !lineColorRef.current.style.display) {\n            lineColorRef.current.style.display = 'block'\n        } else {\n            lineColorRef.current.style.display = 'none'\n        }\n    }\n    const toggleLineWidth = (e) => {\n        if (lineWidthRef.current.style.display === 'none' || !lineWidthRef.current.style.display) {\n            lineWidthRef.current.style.display = 'block'\n        } else {\n            lineWidthRef.current.style.display = 'none'\n\n        }\n    }\n    const toggleLandColor = (e) => {\n        if (landColorRef.current.style.display === 'none' || !landColorRef.current.style.display) {\n            landColorRef.current.style.display = 'block'\n        } else {\n            landColorRef.current.style.display = 'none'\n        }\n    }\n    const togglePlaces = (e) => {\n        props.setPlaces(prevState => !prevState)\n    }\n    const toggleContours = (e) => {\n        props.setContours(prevState => !prevState)\n    }\n    const handleColorChange = (color, property) => {\n        switch (property) {\n            case 'line-color':\n                props.setLineColor(color.hex)\n                break;\n            case 'land-color':\n                props.setLandColor(color.hex)\n                break;\n        }\n    }\n\n    const takePhoto = (e) => {\n        // access map and get the dataurl\n        let img = props.map.getCanvas().toDataURL();\n        console.log(img);\n        var download = document.createElement('a')\n        download.href = img\n        download.target = '_blank'\n        download.download = 'map'\n        let evt = document.createEvent('MouseEvents')\n        evt.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0,\n            false, false, false, false, 0, null);\n        download.dispatchEvent(evt);\n\n    }\n\n    // Add functions for when we change any parameters\n    return (\n        <div ref={nav} id='topo-nav'>\n            <div id='nav-panel'>\n                <h2 id='title'>TOPO</h2>\n                <ul id='nav-list'>\n                    <li onClick={toggleDocs}>Documentation</li>\n                    <li ref={docs} id='docs-container'>\n                        <p>Welcome to Topo! This is a map where you can create photos of\n                            contours on maps and edit the contour line colors and land color.\n                            Try editing this map using the options button below!</p>\n                    </li>\n                    <li onClick={toggleOptions}>Options</li>\n                    <li ref={options} id='option-container'>\n                        <ul id='option-list'>\n                            <li onClick={toggleLandColor}>Land Color</li>\n                            <li onClick={toggleLineColor}>Contour Line Color</li>\n                            <li onClick={toggleLineWidth}>Contour Line Width</li>\n                            <li onClick={toggleContours}>Toggle Contours</li>\n                            <li onClick={togglePlaces}>Toggle Places</li>\n                            {/* <li onClick={toggleNaturalPlaces}>Toggle Natural Places</li> */}\n                        </ul>\n                    </li>\n                    <li onClick={takePhoto}>Download Map</li>\n                    <li>Back to Home</li>\n\n                </ul>\n                <div id='topo-footer'>\n                    <p>Created By: {' '}</p>\n                    <a style={{ color: '#85ceff' }} href='https://github.com/dchicchon'>Daniel Chicchon</a>\n                </div>\n            </div>\n            <div id='nav-widgets'>\n                <span ref={toggleNavRef} onClick={toggleNav} id='toggle-nav' className='tab-click'>{'<'}</span>\n                <div ref={lineColorRef} className='option-widget'>\n                    <h4>Line Color</h4>\n                    <SketchPicker color={props.lineColor} onChangeComplete={(color) => handleColorChange(color, 'line-color')} />\n                </div>\n                <div ref={landColorRef} className='option-widget'>\n                    <h4>Land Color</h4>\n                    <SketchPicker color={props.landColor} onChangeComplete={(color) => handleColorChange(color, 'land-color')} />\n                </div>\n                <div ref={lineWidthRef} className='option-widget'>\n                    <h4>Line Width</h4>\n                    <input onChange={e => props.setLineWidth(parseFloat(e.target.value))} value={props.lineWidth} type='range' min='0.5' max='1.5' step='0.1' />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Nav","import React, { useEffect, useState, useRef } from \"react\";\nimport Nav from './Nav'\nimport \"./App.css\";\nimport mapboxgl from \"mapbox-gl\";\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZGNoaWNjaG9uIiwiYSI6ImNrMm5saGJsczB0emYzYm05dzV4c2lnMDMifQ.mHFtuW251o5kz5nKxKvc-A\";\n\nconst App = () => {\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [landColor, setLandColor] = useState('hsl(185, 0%, 18%)')\n  const [lineColor, setLineColor] = useState('#85ceff')\n  const [lineWidth, setLineWidth] = useState(1)\n  const [contours, setContours] = useState(true)\n  const [places, setPlaces] = useState(true)\n\n  // initial setup of map\n  useEffect(() => {\n    let lng = -70.9\n    let lat = 42.35\n    let zoom = 9;\n    let longitude = window.localStorage.getItem('lng')\n    let latitude = window.localStorage.getItem('lat')\n    let zoomStore = window.localStorage.getItem('zoom')\n    // let storedLineColor = window.localStorage.getItem('line-color')\n    // let storedLandColor = window.localStorage.getItem('land-color')\n    if (parseFloat(longitude) && parseFloat(latitude) && parseFloat(zoomStore)) {\n      lng = longitude;\n      lat = latitude;\n      zoom = zoomStore\n    }\n    const newMap = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/dchicchon/ckvb5lorxb4ep14p13vc4exqp\",\n      center: [lng, lat],\n      zoom: zoom,\n      preserveDrawingBuffer: true\n    });\n    newMap.on('load', () => {\n\n      newMap.addSource('places', {\n        type: 'vector',\n        url: 'mapbox://mapbox.mapbox-streets-v8'\n      });\n\n      newMap.addLayer({\n        id: 'places',\n        type: 'symbol',\n        source: 'places',\n        'source-layer': 'place_label',\n        layout: {\n          \"text-field\": [\"get\", \"name\"],\n          \"text-size\": 12,\n          \"text-offset\": [0, -1.5],\n        },\n        paint: {\n          \"text-color\": \"#fff\",\n          \"text-halo-color\": \"#333333\",\n          \"text-halo-width\": 1,\n        },\n\n      })\n\n      newMap.addLayer({\n        id: 'POI',\n        type: 'symbol',\n        source: 'places',\n        'source-layer': 'poi_label',\n        layout: {\n          \"text-field\": [\"get\", \"name\"],\n          \"text-size\": 12,\n          \"text-offset\": [0, -1.5],\n        },\n        paint: {\n          \"text-color\": \"#fff\",\n          \"text-halo-color\": \"#333333\",\n          \"text-halo-width\": 1,\n        },\n      })\n\n      newMap.addSource('terrain', {\n        type: 'vector',\n        url: 'mapbox://mapbox.mapbox-terrain-v2'\n      });\n\n      newMap.addLayer({\n        'id': 'contours',\n        'type': 'line',\n        'source': 'terrain',\n        'source-layer': 'contour',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible',\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': lineColor,\n          'line-width': lineWidth\n        }\n      });\n\n    })\n    newMap.on('move', () => {\n      window.localStorage.setItem('lng', newMap.getCenter().lng.toFixed(4))\n      window.localStorage.setItem('lat', newMap.getCenter().lat.toFixed(4))\n      window.localStorage.setItem('zoom', newMap.getZoom().toFixed(2))\n    })\n    setMap(newMap)\n  }, []);\n\n  useEffect(() => {\n    if (!map) return;\n    map.setPaintProperty('land', 'background-color', landColor)\n    map.setPaintProperty('water-shadow', 'fill-color', landColor)\n    map.setPaintProperty('waterway-shadow', 'line-color', landColor)\n    map.setPaintProperty('waterway', 'line-color', landColor)\n  }, [landColor])\n\n  useEffect(() => {\n    if (!map) return\n    map.setPaintProperty('contours', 'line-color', lineColor)\n  }, [lineColor])\n\n  useEffect(() => {\n    if (!map) return;\n    map.setPaintProperty('contours', 'line-width', lineWidth)\n  }, [lineWidth])\n\n  // Toggle Contours\n  useEffect(() => {\n    if (!map) return;\n    console.log(\"Toggle Contours\")\n    const newVisibleProperty = contours ? 'visible' : 'none'\n    map.setLayoutProperty('contours', 'visibility', newVisibleProperty)\n  }, [contours])\n\n  useEffect(() => {\n    if (!map) return;\n    const newVisibleProperty = places ? 'visible' : 'none'\n    map.setLayoutProperty('places', 'visibility', newVisibleProperty)\n    map.setLayoutProperty('POI', 'visibility', newVisibleProperty)\n\n  }, [places])\n\n  return (\n    <div id='main'>\n      <Nav\n        map={map}\n        landColor={landColor}\n        setLandColor={setLandColor}\n        lineColor={lineColor}\n        setLineColor={setLineColor}\n        lineWidth={lineWidth}\n        setLineWidth={setLineWidth}\n        setPlaces={setPlaces}\n        setContours={setContours}\n      />\n      <div ref={mapContainer} className=\"map-container\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}